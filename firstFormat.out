nohup: ignoring input
Using TensorFlow backend.
/home/arios/S2S-Attention-CTC/env/lib/python3.5/site-packages/tensorflow/python/framework/dtypes.py:523: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/arios/S2S-Attention-CTC/env/lib/python3.5/site-packages/tensorflow/python/framework/dtypes.py:524: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/arios/S2S-Attention-CTC/env/lib/python3.5/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/arios/S2S-Attention-CTC/env/lib/python3.5/site-packages/tensorflow/python/framework/dtypes.py:526: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/arios/S2S-Attention-CTC/env/lib/python3.5/site-packages/tensorflow/python/framework/dtypes.py:527: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/arios/S2S-Attention-CTC/env/lib/python3.5/site-packages/tensorflow/python/framework/dtypes.py:532: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
Loading training data...
Loading testing data...
Loading validation data...
//// - TRAINING DATA - ////
(30000,)
(30000,)
///////////////////////////

//// - TESTING DATA - ////
(5000,)
(5000,)
///////////////////////////

//// - VALIDATION DATA - ////
(5000,)
(5000,)
///////////////////////////
Vocabulary size: 714
2020-02-06 11:02:44.208554: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2020-02-06 11:02:45.656138: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:964] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-02-06 11:02:45.656653: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1432] Found device 0 with properties: 
name: GeForce GTX 1080 Ti major: 6 minor: 1 memoryClockRate(GHz): 1.582
pciBusID: 0000:03:00.0
totalMemory: 10.91GiB freeMemory: 10.75GiB
2020-02-06 11:02:45.656666: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1511] Adding visible gpu devices: 0
2020-02-06 11:02:46.371806: I tensorflow/core/common_runtime/gpu/gpu_device.cc:982] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-02-06 11:02:46.371844: I tensorflow/core/common_runtime/gpu/gpu_device.cc:988]      0 
2020-02-06 11:02:46.371852: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1001] 0:   N 
2020-02-06 11:02:46.372103: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10400 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080 Ti, pci bus id: 0000:03:00.0, compute capability: 6.1)
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input (InputLayer)              (None, 64, None, 1)  0                                            
__________________________________________________________________________________________________
conv2d_1 (Conv2D)               (None, 64, None, 32) 320         input[0][0]                      
__________________________________________________________________________________________________
batch_normalization_1 (BatchNor (None, 64, None, 32) 128         conv2d_1[0][0]                   
__________________________________________________________________________________________________
max_pooling2d_1 (MaxPooling2D)  (None, 32, None, 32) 0           batch_normalization_1[0][0]      
__________________________________________________________________________________________________
conv2d_2 (Conv2D)               (None, 32, None, 64) 18496       max_pooling2d_1[0][0]            
__________________________________________________________________________________________________
batch_normalization_2 (BatchNor (None, 32, None, 64) 256         conv2d_2[0][0]                   
__________________________________________________________________________________________________
max_pooling2d_2 (MaxPooling2D)  (None, 16, None, 64) 0           batch_normalization_2[0][0]      
__________________________________________________________________________________________________
conv2d_3 (Conv2D)               (None, 16, None, 128 73856       max_pooling2d_2[0][0]            
__________________________________________________________________________________________________
batch_normalization_3 (BatchNor (None, 16, None, 128 512         conv2d_3[0][0]                   
__________________________________________________________________________________________________
max_pooling2d_3 (MaxPooling2D)  (None, 8, None, 128) 0           batch_normalization_3[0][0]      
__________________________________________________________________________________________________
conv2d_4 (Conv2D)               (None, 8, None, 128) 147584      max_pooling2d_3[0][0]            
__________________________________________________________________________________________________
batch_normalization_4 (BatchNor (None, 8, None, 128) 512         conv2d_4[0][0]                   
__________________________________________________________________________________________________
max_pooling2d_4 (MaxPooling2D)  (None, 4, None, 128) 0           batch_normalization_4[0][0]      
__________________________________________________________________________________________________
permute_1 (Permute)             (None, None, 4, 128) 0           max_pooling2d_4[0][0]            
__________________________________________________________________________________________________
reshape (Reshape)               (None, None, 512)    0           permute_1[0][0]                  
__________________________________________________________________________________________________
input_1 (InputLayer)            (None, None, 714)    0                                            
__________________________________________________________________________________________________
lstm_1 (LSTM)                   [(None, 512), (None, 2099200     reshape[0][0]                    
__________________________________________________________________________________________________
lstm_2 (LSTM)                   [(None, None, 512),  2512896     input_1[0][0]                    
                                                                 lstm_1[0][1]                     
                                                                 lstm_1[0][2]                     
__________________________________________________________________________________________________
dense_1 (Dense)                 (None, None, 714)    366282      lstm_2[0][0]                     
==================================================================================================
Total params: 5,220,042
Trainable params: 5,219,338
Non-trainable params: 704
__________________________________________________________________________________________________

----> Epoch 0
Epoch 1/2
 - 209s - loss: 1.9375
Epoch 2/2
 - 178s - loss: 1.3231
Traceback (most recent call last):
  File "trainPrinted.py", line 277, in <module>
    TrainLoop(model, TrainX, TrainY, TestX, TestY)
  File "trainPrinted.py", line 219, in TrainLoop
    prediction = test_prediction(sequence, model_to_train, w2i, i2w)
  File "trainPrinted.py", line 49, in test_prediction
    decoded.append(prediction[0][-1])
AttributeError: 'numpy.ndarray' object has no attribute 'append'
